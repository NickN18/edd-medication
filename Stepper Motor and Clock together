// AccelStepper - Version: Latest 
#include <AccelStepper.h>
#include <MultiStepper.h>

//const int stepsPerRev = 200; //change to fit the number of steps per revolution for motor

#define HALFSTEP 8

const int limitPin = 7;

#define motorPin1 8
#define motorPin2 9
#define motorPin3 10
#define motorPin4 11

int limitState = 0;

int hour = 19;
int min;
int sec;
int flag;
int TIME = 1000;

unsigned long now = 0;

//initializes the stepper motor library on pins 8 through 11
AccelStepper testStep(HALFSTEP, motorPin1, motorPin2, motorPin3, motorPin4);

int revCheck = 0; //0 for no revolution done, 1 for a revolution made
int revolution = 4096/2; // revolution measure

void setup() {
  // put your setup code here, to run once:
  
  Serial.begin(9600);
  
  pinMode(limitPin, INPUT);
  
  testStep.setMaxSpeed(10000.0);
  testStep.setAcceleration(1000.0);
  testStep.setSpeed(50);
  testStep.moveTo(revolution/4); // 1/8 of a full revolution

}

void loop() {
  
  stepMotor();
  
  if(millis() > now + TIME) {
    now = millis();
    timeClock();
  }
  
}

void timeClock() {
  
  sec += 1;
  Serial.println(" ");
  Serial.print(hour);
  Serial.print(":");
  Serial.print(min);
  Serial.print(":");
  Serial.print(sec);
  
  switch(hour) {
    case 0: 
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      Serial.print(" AM");
      break;
    
    case 12: 
    case 13: 
    case 14: 
    case 15: 
    case 16: 
    case 17: 
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
      Serial.print(" PM");
      break;
    
    case 24:
      Serial.print(" AM");
      flag = 0;
    
  }
  
  if(sec == 60) {
    sec = 0;
    min += 1;
  }
  
  if(min == 60) {
    min = 0;
    hour += 1;
    flag += 1;
  }
  
  if(hour == 13) {
    hour = 1;
  }  
  
  
}


void stepMotor() {

  limitState = digitalRead(limitPin);

  
  if(sec == 10) {
    testStep.run();
  }
  
  
  //for(revCheck = 0; revCheck < 8; revCheck++){
    //if(revCheck != 8 && min == 1) {
      //testStep.run(); 
    //} else if(revCheck == 8){
      //testStep.stop();
      //revCheck = 0;
    //}

  //}
  
}


