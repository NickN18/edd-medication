#include <AccelStepper.h>
#include <MultiStepper.h>
#include <Wire.h>
#include "RTClib.h"

const int limitPin = 7;

#define HALFSTEP 8
#define motorPin1 8
#define motorPin2 9
#define motorPin3 10
#define motorPin4 11

int limitState = 0;

int flag;
int TIME = 1000;

unsigned long nowT = 0;

RTC_DS3231 rtc;

//initializes the stepper motor library on pins 8 through 11
AccelStepper testStep(HALFSTEP, motorPin1, motorPin2, motorPin3, motorPin4);

int revCheck = 0; //0 for no revolution done, 1 for a revolution made
int revolution = 4096/2; // revolution measure


void setup() {
  Wire.begin();
  
  Serial.begin(9600);

  delay(3000); //wait for the console to open

  if (! rtc.begin()) {
    Serial.println("Couldn't find RTC");
    while (1);
  }

  if (rtc.lostPower()) {
    Serial.println("RTC lost power, lets set the time!");
    // following line sets the RTC to the date & time this sketch was compiled
    rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));
    // This line sets the RTC with an explicit date & time, for example to set
    // January 21, 2014 at 3am you would call:
    // rtc.adjust(DateTime(2014, 1, 21, 3, 0, 0));
  }

  pinMode(limitPin, INPUT);
  
  testStep.setMaxSpeed(10000.0);
  testStep.setAcceleration(1000.0);
  testStep.setSpeed(50);  
  testStep.moveTo(revolution/4); // 1/8 of a full revolution
}

void loop() {
    
  stepMotor();
  
  if(millis() > nowT + TIME) {
    nowT = millis();
    timeClock();
  }
}

void timeClock() {
    DateTime now = rtc.now();

    Serial.print(now.hour(), DEC);
    Serial.print(':');
    Serial.print(now.minute(), DEC);
    Serial.print(':');
    Serial.print(now.second(), DEC);
    
    Serial.println();
}

void stepMotor() {
  DateTime now = rtc.now();

  limitState = digitalRead(limitPin);

  if(now.second() == 5) {
    testStep.run();
  } 


  
  //if(now.hour() == 7 && now.minute() == 0) {
  //  testStep.run();
  //}

 // if(now.hour() == 6 && now.minute() == 1 || now.minute() == 3) {
 //   testStep.run();
 // }
  
}



