// AccelStepper - Version: Latest 

#include <AccelStepper.h>
#include <MultiStepper.h>
#include <DS3231.h>

const int limitPin = 7;

#define HALFSTEP 8
#define motorPin1 8
#define motorPin2 9
#define motorPin3 10
#define motorPin4 11

int limitState = 0;

int TIME = 1000;

unsigned long nowT = 0;

DS3231 rtc;

bool h12;
bool PM;

//initializes the stepper motor library on pins 8 through 11
AccelStepper testStep(HALFSTEP, motorPin1, motorPin2, motorPin3, motorPin4);

int revolution = 4096/2; // revolution measure

void setup() {

  Serial.begin(9600);
  
  rtc.begin();
  
  pinMode(limitPin, INPUT);
  
  testStep.setMaxSpeed(10000.0);
  testStep.setAcceleration(1000.0);
  testStep.setSpeed(50);
  testStep.moveTo(revolution/4); // 1/8 of a full revolution

}

void loop() {
  
  stepMotor();
  
  if(millis() > nowT + TIME) {
    now = millis();
    timeClock();
  }  
}

void timeClock() {
    Serial.print(rtc.getHour(), DEC);
    
}

void stepMotor() {

  limitState = digitalRead(limitPin);

  if(hour == 0 && min == 1) {
    testStep.run();
  } 
}
