//https://create.arduino.cc/projecthub/ozyRonald/alarm-clock-and-timer-working-standalone-b683db?ref=tag&ref_id=timer&offset=3

#include <EEPROM.h>
#include <Pushbutton.h>
#include <EEPROM.h>
#include <RTClib.h>
#include <LCD.h>
#include <LiquidCrystal.h>
#include <LiquidCrystal_I2C.h>
#include <Wire.h>

LiquidCrystal_I2C lcd(0x3F, 2, 1, 0, 4, 5, 6, 7, 3, POSITIVE);
RTC_DS1307 RTC;

const int DS1307 = 0x68;
const int lightAlarmPin = 6; // sets the led to pin 6
const int selectButtonPin = 5; //sets a button to have a selection to the timer management
const int nextButtonPin = 4;
const int upButtonPin = 3;
const int downButtonPin = 2;
const int alarmButtonPin = alarmSel; //alarmSel is a later function
const boolean alarmSystem = 7;
const boolean timerForLED = 8;

Pushbutton nextButton(nextButtonPin);
Pushbutton upButton(upButtonPin);
Pushbutton downButton(downButtonPin);
Pushbutton alarmButton(alarmButtonPin);

enum mainSelection {
  ALARM_SWITCH = 1;
  ALARM_START,
  ALARM_SET,
  CLOCK_SET,
  ALARM_AUTO,
  RUN_CLOCK

};

enum mainSelection key = RUN_CLOCK;

int alarmMinuteStart = 1;
int alarmHourStart = 1;
int alarmMinuteStop = 2;
int alarmHourStop = 2;
int alarmPlus = 0; //Working hours of the lights; Maximum of 6
boolean alarmOnOff = false;
boolean autoManual = false; //Timer being automatic or manual
int alarmOffset = 6;
int yr = 2000;
int mo = 1;
int dy = 1;
int hr = 0;
int mn = 0;
int setYr = 00;
int setMo = 1;
int setDy = 1;
int setHr = 0;
int setMn = 0;
boolean dayLightSaving = false;
boolean aBlink = true;
const int loopCheckMax = 80; //Duration of the loops in the settings
int loopCheck = 0; //To control if there is any interaction
unsigned long clockDisplayCheck = millis();
int lcdDisplayCheck = 0; //Counter for controling the time the lcd will be on
boolean timerLight = false; //Set the relays for the alarm lights
int tiemrLightStage = 0;


Servo servo;

int posit = 0;

void setup() {
  // put your setup code here, to run once:
    servo.attach(8);
    
    pinMode(lightAlarmPin, OUTPUT);
    pinMode(alarmSystemPin, OUTPUT);
    pinMOde(timerForLED, OUTPUT);
    lcd.begin(16,2);
    Wire.begin();
    RTC.begin();
    Serial.begin(9600);
    clockRunning();
    
    lcd.clear();
    lcd.on();
    displayLcdFirstLine(2);
    readTimeNow();
    displayTimeNow(2);
    readAlarm();
}

void loop() {
  // put your main code here, to run repeatedly:
    for (posit = 0; posit <= 180; posit += 1) {
      servo.write(posit);
      delay(15);
    }
    for(posit = 180; posit >= 0; posit -= 1) {
      servo.write(posit);
      delay(15);
    }
    
    /*
    
      CODE FOR THE TIMER AND CLOCK TO WORK SEPARATELY
        This program utilizes a LCD display made by Arduino
    
    */
    
    
    key = RUN_CLOCK();
    lightMahuallyOnOff();
    lcdLight(); //Turns on the lcd light on demand
    
    if ((millis() - clockDisplayCheck) > 500) { //Reading and displaying date and time continuesly every 0.5 seconds 
      clockRunning();
      clockDisplayCheck = millis(); //Sets the timer variable
      readTimeNow(); //Reads the time out of the Real Time Clock
      displayTimeNow(2);  //Displays the current time and the digit to blink
      readAlarm(); //Reads the alarm settings out off the EEPROM
      displayLcdFirstLine( 0);  //Basic display line
      alarmActivate(); //Sets the alarm
      timerLightOnOff();
    }
    
    if (selectButton.getSingleDebouncedPress())
  {
    lcdDisplayCheck = 0; // lcd back to maximum time
    lcdLight(); //Turns the lcd on
    mainKeySelection(); // reads keySelection   ALARM_ON_OFF,ALARM_SEASON,ALARM_SET,CLOCK_SET,RUN_CLOCK,
    //  lcd.setCursor(0, 0);

    switch (key) {
      case ALARM_ON_OFF:
        setTimerOnOff();
        break;

      case ALARM_SEASON:
        setTimerPlus();
        break;

      case ALARM_SET:
        setHr = alarmHourStop;
        setMn = alarmMinuteStop;
        lcd.setCursor(0, 0);
        lcd.print("Set alarm time  ");
        presetClockTime(alarmOffSet); //Gives an off-set to the alarm stopping time of 6? hours
        if (setHr == 12) {  //to prevent the timer passing mid-night
          setHr = 11;
          setMn = 59;
        }
        saveAlarmSet();
        //   readAlarm();
        break;

      case CLOCK_SET:
        presetClockDate();
        readTimeNow();  //reading the current time to display in presetClockTime
        setHr = hr;
        setMn = mn;
        lcd.setCursor(0, 0);
        lcd.print("Set clock time  ");
        presetClockTime(0); //Time can be set starting at zero. The function is also in use to set the alarm stopping time
        saveClock();
        break;

      case AlARM_AUTO:
        alarmAutoManual();
        break;
    }
  } 
}
